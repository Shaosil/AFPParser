using System.Collections.Generic;

namespace AFPParser.StructuredFields
{
	public class MCF1 : StructuredField
	{
		private static string _abbr = "MCF";
		private static string _title = "Map Coded Font (Format 1)";
		private static string _desc = "Identifies the correspondence between external font names and resource local identifiers.";
		private static List<Offset> _oSets = new List<Offset>()
		{
			new Offset(0, Lookups.DataTypes.UBIN, "Coded Font ID"),
			new Offset(1, Lookups.DataTypes.EMPTY, ""),
			new Offset(2, Lookups.DataTypes.CODE, "Font section ID")
			{
				Mappings = new Dictionary<byte, string>()
				{
					{ 0x00, "Single byte coded font" },
					{ 0x41, "Double byte coded font" },
					{ 0x42, "Double byte coded font" },
					{ 0x43, "Double byte coded font" },
					{ 0x44, "Double byte coded font" },
					{ 0x45, "Double byte coded font" },
					{ 0x46, "Double byte coded font" },
					{ 0x47, "Double byte coded font" },
					{ 0x48, "Double byte coded font" },
					{ 0x49, "Double byte coded font" },
					{ 0x4A, "Double byte coded font" },
					{ 0x4B, "Double byte coded font" },
					{ 0x4C, "Double byte coded font" },
					{ 0x4D, "Double byte coded font" },
					{ 0x4E, "Double byte coded font" },
					{ 0x4F, "Double byte coded font" },
					{ 0x50, "Double byte coded font" },
					{ 0x51, "Double byte coded font" },
					{ 0x52, "Double byte coded font" },
					{ 0x53, "Double byte coded font" },
					{ 0x54, "Double byte coded font" },
					{ 0x55, "Double byte coded font" },
					{ 0x56, "Double byte coded font" },
					{ 0x57, "Double byte coded font" },
					{ 0x58, "Double byte coded font" },
					{ 0x59, "Double byte coded font" },
					{ 0x5A, "Double byte coded font" },
					{ 0x5B, "Double byte coded font" },
					{ 0x5C, "Double byte coded font" },
					{ 0x5D, "Double byte coded font" },
					{ 0x5E, "Double byte coded font" },
					{ 0x5F, "Double byte coded font" },
					{ 0x60, "Double byte coded font" },
					{ 0x61, "Double byte coded font" },
					{ 0x62, "Double byte coded font" },
					{ 0x63, "Double byte coded font" },
					{ 0x64, "Double byte coded font" },
					{ 0x65, "Double byte coded font" },
					{ 0x66, "Double byte coded font" },
					{ 0x67, "Double byte coded font" },
					{ 0x68, "Double byte coded font" },
					{ 0x69, "Double byte coded font" },
					{ 0x6A, "Double byte coded font" },
					{ 0x6B, "Double byte coded font" },
					{ 0x6C, "Double byte coded font" },
					{ 0x6D, "Double byte coded font" },
					{ 0x6E, "Double byte coded font" },
					{ 0x6F, "Double byte coded font" },
					{ 0x70, "Double byte coded font" },
					{ 0x71, "Double byte coded font" },
					{ 0x72, "Double byte coded font" },
					{ 0x73, "Double byte coded font" },
					{ 0x74, "Double byte coded font" },
					{ 0x75, "Double byte coded font" },
					{ 0x76, "Double byte coded font" },
					{ 0x77, "Double byte coded font" },
					{ 0x78, "Double byte coded font" },
					{ 0x79, "Double byte coded font" },
					{ 0x7A, "Double byte coded font" },
					{ 0x7B, "Double byte coded font" },
					{ 0x7C, "Double byte coded font" },
					{ 0x7D, "Double byte coded font" },
					{ 0x7E, "Double byte coded font" },
					{ 0x7F, "Double byte coded font" },
					{ 0x80, "Double byte coded font" },
					{ 0x81, "Double byte coded font" },
					{ 0x82, "Double byte coded font" },
					{ 0x83, "Double byte coded font" },
					{ 0x84, "Double byte coded font" },
					{ 0x85, "Double byte coded font" },
					{ 0x86, "Double byte coded font" },
					{ 0x87, "Double byte coded font" },
					{ 0x88, "Double byte coded font" },
					{ 0x89, "Double byte coded font" },
					{ 0x8A, "Double byte coded font" },
					{ 0x8B, "Double byte coded font" },
					{ 0x8C, "Double byte coded font" },
					{ 0x8D, "Double byte coded font" },
					{ 0x8E, "Double byte coded font" },
					{ 0x8F, "Double byte coded font" },
					{ 0x90, "Double byte coded font" },
					{ 0x91, "Double byte coded font" },
					{ 0x92, "Double byte coded font" },
					{ 0x93, "Double byte coded font" },
					{ 0x94, "Double byte coded font" },
					{ 0x95, "Double byte coded font" },
					{ 0x96, "Double byte coded font" },
					{ 0x97, "Double byte coded font" },
					{ 0x98, "Double byte coded font" },
					{ 0x99, "Double byte coded font" },
					{ 0x9A, "Double byte coded font" },
					{ 0x9B, "Double byte coded font" },
					{ 0x9C, "Double byte coded font" },
					{ 0x9D, "Double byte coded font" },
					{ 0x9E, "Double byte coded font" },
					{ 0x9F, "Double byte coded font" },
					{ 0xA0, "Double byte coded font" },
					{ 0xA1, "Double byte coded font" },
					{ 0xA2, "Double byte coded font" },
					{ 0xA3, "Double byte coded font" },
					{ 0xA4, "Double byte coded font" },
					{ 0xA5, "Double byte coded font" },
					{ 0xA6, "Double byte coded font" },
					{ 0xA7, "Double byte coded font" },
					{ 0xA8, "Double byte coded font" },
					{ 0xA9, "Double byte coded font" },
					{ 0xAA, "Double byte coded font" },
					{ 0xAB, "Double byte coded font" },
					{ 0xAC, "Double byte coded font" },
					{ 0xAD, "Double byte coded font" },
					{ 0xAE, "Double byte coded font" },
					{ 0xAF, "Double byte coded font" },
					{ 0xB0, "Double byte coded font" },
					{ 0xB1, "Double byte coded font" },
					{ 0xB2, "Double byte coded font" },
					{ 0xB3, "Double byte coded font" },
					{ 0xB4, "Double byte coded font" },
					{ 0xB5, "Double byte coded font" },
					{ 0xB6, "Double byte coded font" },
					{ 0xB7, "Double byte coded font" },
					{ 0xB8, "Double byte coded font" },
					{ 0xB9, "Double byte coded font" },
					{ 0xBA, "Double byte coded font" },
					{ 0xBB, "Double byte coded font" },
					{ 0xBC, "Double byte coded font" },
					{ 0xBD, "Double byte coded font" },
					{ 0xBE, "Double byte coded font" },
					{ 0xBF, "Double byte coded font" },
					{ 0xC0, "Double byte coded font" },
					{ 0xC1, "Double byte coded font" },
					{ 0xC2, "Double byte coded font" },
					{ 0xC3, "Double byte coded font" },
					{ 0xC4, "Double byte coded font" },
					{ 0xC5, "Double byte coded font" },
					{ 0xC6, "Double byte coded font" },
					{ 0xC7, "Double byte coded font" },
					{ 0xC8, "Double byte coded font" },
					{ 0xC9, "Double byte coded font" },
					{ 0xCA, "Double byte coded font" },
					{ 0xCB, "Double byte coded font" },
					{ 0xCC, "Double byte coded font" },
					{ 0xCD, "Double byte coded font" },
					{ 0xCE, "Double byte coded font" },
					{ 0xCF, "Double byte coded font" },
					{ 0xD0, "Double byte coded font" },
					{ 0xD1, "Double byte coded font" },
					{ 0xD2, "Double byte coded font" },
					{ 0xD3, "Double byte coded font" },
					{ 0xD4, "Double byte coded font" },
					{ 0xD5, "Double byte coded font" },
					{ 0xD6, "Double byte coded font" },
					{ 0xD7, "Double byte coded font" },
					{ 0xD8, "Double byte coded font" },
					{ 0xD9, "Double byte coded font" },
					{ 0xDA, "Double byte coded font" },
					{ 0xDB, "Double byte coded font" },
					{ 0xDC, "Double byte coded font" },
					{ 0xDD, "Double byte coded font" },
					{ 0xDE, "Double byte coded font" },
					{ 0xDF, "Double byte coded font" },
					{ 0xE0, "Double byte coded font" },
					{ 0xE1, "Double byte coded font" },
					{ 0xE2, "Double byte coded font" },
					{ 0xE3, "Double byte coded font" },
					{ 0xE4, "Double byte coded font" },
					{ 0xE5, "Double byte coded font" },
					{ 0xE6, "Double byte coded font" },
					{ 0xE7, "Double byte coded font" },
					{ 0xE8, "Double byte coded font" },
					{ 0xE9, "Double byte coded font" },
					{ 0xEA, "Double byte coded font" },
					{ 0xEB, "Double byte coded font" },
					{ 0xEC, "Double byte coded font" },
					{ 0xED, "Double byte coded font" },
					{ 0xEE, "Double byte coded font" },
					{ 0xEF, "Double byte coded font" },
					{ 0xF0, "Double byte coded font" },
					{ 0xF1, "Double byte coded font" },
					{ 0xF2, "Double byte coded font" },
					{ 0xF3, "Double byte coded font" },
					{ 0xF4, "Double byte coded font" },
					{ 0xF5, "Double byte coded font" },
					{ 0xF6, "Double byte coded font" },
					{ 0xF7, "Double byte coded font" },
					{ 0xF8, "Double byte coded font" },
					{ 0xF9, "Double byte coded font" },
					{ 0xFA, "Double byte coded font" },
					{ 0xFB, "Double byte coded font" },
					{ 0xFC, "Double byte coded font" },
					{ 0xFD, "Double byte coded font" },
					{ 0xFE, "Double byte coded font" }
				}
			},
			new Offset(3, Lookups.DataTypes.EMPTY, ""),
			new Offset(4, Lookups.DataTypes.CHAR, "Coded Font Name"),
			new Offset(12, Lookups.DataTypes.CHAR, "Code Page Name"),
			new Offset(20, Lookups.DataTypes.CHAR, "Font Character Set Name"),
			new Offset(28, Lookups.DataTypes.CODE, "Character Rotation (Need 2 byte mapping support!)")
		};

		public override string Abbreviation => _abbr;
		public override string Title => _title;
		protected override string Description => _desc;
		protected override bool IsRepeatingGroup => true;
		protected override int RepeatingGroupStart => 4;
        protected override int RepeatingGroupLength => Data[0];
        protected override List<Offset> Offsets => _oSets;

		public MCF1(int length, string hex, byte flag, int sequence) : base (length, hex, flag, sequence) { }
	}
}
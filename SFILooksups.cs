using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AFP_Reader
{
    class SFILooksups
    {
        public static Dictionary<string, string> SFI_HexToHuman() {
            Dictionary<string, string> val = new Dictionary<string, string>();
            val.Add("D3A088", "Medium Finishing Control");
            val.Add("D3A090", "Tag Logical Element");
            val.Add("D3A288", "Medium Copy Count");
            val.Add("D3A66B", "Objct Area Descriptor");
            val.Add("D3A67B", "Image Input Descriptor");
            val.Add("D3A688", "Medium Descriptor");
            val.Add("D3A68D", "Record Descriptor");
            val.Add("D3A68E", "XML Descriptor");
            val.Add("D3A692", "Container Data Descriptor");
            val.Add("D3A69B", "Composed/Presentation Text Descriptor");
            val.Add("D3A6AF", "Page Descriptor");
            val.Add("D3A6BB", "Graphics Data Descriptor");
            val.Add("D3A6C5", "From Environment Group Descriptor");
            val.Add("D3A6E3", "Data Map Transmission Subcase Descriptor");
            val.Add("D3A6E7", "Line Descriptor");
            val.Add("D3A6EB", "Bar Code Data Descriptor");
            val.Add("D3A6FB", "Image Data Descriptor IO");
            val.Add("D3A77B", "Image Outpub Control");
            val.Add("D3A788", "Medium Modification Control");
            val.Add("D3A79B", "Conposed Text Control");
            val.Add("D3A7AF", "Page Modification Control");
            val.Add("D3A7A8", "Presentation Environment Control");
            val.Add("D3A7CA", "Conditional Processing Control");
            val.Add("D3A85F", "Begin Page Segment");
            val.Add("D3A87B", "Begin Image block");
            val.Add("D3A892", "Begin Object Container");
            val.Add("D3A89B", "Begin Presentation Text Block");
            val.Add("D3A8A7", "Begin Document Index");
            val.Add("D3A8A8", "Begin Document");
            val.Add("D3A8AD", "Begin Named Page Group");
            val.Add("D3A8AF", "Begin Page");
            val.Add("D3A8BB", "Begin Graphics Object");
            val.Add("D3A8C4", "Begin Document Environment Group");
            val.Add("D3A8C5", "Begin Form Environment Group");
            val.Add("D3A8C6", "Begin Resource Group");
            val.Add("D3A8C7", "Begin Object Environment Group");
            val.Add("D3A8C9", "Begin Active Environment Group");
            val.Add("D3A8CA", "Begin Data Map");
            val.Add("D3A8CB", "Begin Page Map");
            val.Add("D3A8CC", "Begin Medium Map");
            val.Add("D3A8CD", "Begin Form Map");
            val.Add("D3A8CE", "Begin Resource");
            val.Add("D3A8D9", "Begin Resource Environment Group");
            val.Add("D3A8DF", "Begin Overlay");
            val.Add("D3A8E3", "Begin Data Map Transmission Subcase");
            val.Add("D3A8EB", "Begin Bar Code Object");
            val.Add("D3A8FB", "Begin Image Object IO");
            val.Add("D3A95F", "End Page Segment");
            val.Add("D3A97B", "End Image Block IM");
            val.Add("D3A992", "End Object Container");
            val.Add("D3A99B", "End Presentation Text Object");
            val.Add("D3A9A7", "End Document Index");
            val.Add("D3A9A8", "End Document");
            val.Add("D3A9AD", "End Named Page Group");
            val.Add("D3A9AF", "End Page");
            val.Add("D3A9BB", "End Graphics Object");
            val.Add("D3A9C4", "End Document Environment");
            val.Add("D3A9C5", "End Form Document Group");
            val.Add("D3A9C6", "End Resource Group");
            val.Add("D3A9C7", "End Object Environment Group");
            val.Add("D3A9C9", "End Active Environment Group");
            val.Add("D3A9CA", "End Data Map");
            val.Add("D3A9CB", "End Page Map");
            val.Add("D3A9CC", "End Medium Map");
            val.Add("D3A9CD", "End Form Map");
            val.Add("D3A9CE", "End Resource");
            val.Add("D3A9D9", "End Resource Environment Group");
            val.Add("D3A9DF", "End Overlay");
            val.Add("D3A9E3", "End Data Map Transmission Subcase");
            val.Add("D3A9EB", "End Bar Code Object");
            val.Add("D3A9FB", "End Image Object IO");
            val.Add("D3AAE7", "Line Descriptor Count");
            val.Add("D3AAEC", "Fixed Data Size");
            val.Add("D3AB88", "Map Media Type");
            val.Add("D3AB92", "Map Container Data");
            val.Add("D3ABAF", "Map Page");
            val.Add("D3ABBB", "Map Graphic Object");
            val.Add("D3ABC3", "Map Data Resource");
            val.Add("D3ABCA", "Invoke Data Map");
            val.Add("D3ABCC", "Invoke Medium Map");
            val.Add("D3ABD8", "Map Page Overlay");
            val.Add("D3ABEA", "Map Medium Supresion");
            val.Add("D3ABEB", "Map Bar Code");
            val.Add("D3ABFB", "Map IO Image Object");
            val.Add("D3AC6B", "Object Area Position");
            val.Add("D3AC7B", "Image Cell Position");
            val.Add("D3ACAF", "Page Position (Format 1)");
            val.Add("D3ADC3", "Preprocess Presentation Object");
            val.Add("D3AF5F", "Include Page Segment");
            val.Add("D3AFAF", "Include Page");
            val.Add("D3AFC3", "Include Object");
            val.Add("D3AFD8", "Include Page Overlay");
            val.Add("D3B15F", "Map Page Segment");
            val.Add("D3B18A", "Map Coded Form (Format 1)");
            val.Add("D3B19B", "Presentation Text Descriptor (Format 2)");
            val.Add("D3B1AF", "Page Position (Format 2)");
            val.Add("D3B1DF", "Map Medium Overlay");
            val.Add("D3B288", "Presentation Fidelity Control");
            val.Add("D3B2A7", "Index Element");
            val.Add("D3B490", "Link Logical Element");
            val.Add("D3EE7B", "Image Raster Data");
            val.Add("D3EE92", "Ovject Container Data");
            val.Add("D3EEBB", "Graphics Data");
            val.Add("D3EE9B", "Presentation Text Data");
            val.Add("D3EEEB", "Bar Code Data");
            val.Add("D3EEEC", "Fixed Data Text");
            val.Add("D3EEEE", "No Operation");
            val.Add("D3EEFB", "Image Picture Data IO");
            return val;
        }
    }
}
